package com.zingkg.shippinglabelcreator;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.PrimitiveIterator;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;

/**
 * Creates the main window for the Cheung Rattan application.
 */
public class MainWindow extends javax.swing.JFrame {
    /**
     * The list model that stores information about items.
     */
    private DefaultListModel<Item> listModel;

    /**
     * The list of items that is currently in the main window.
     */
    private List<Item> items;

    private final Settings settings;
    /**
     * Creates new form Main
     */
    public MainWindow(Settings settings) {
        this.settings = settings;
        listModel = new DefaultListModel<>();
        items = new ArrayList<>();
        initComponents();
        initTestingSettings();
        orderItemList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        statusLabel.setText("Ready");
    }

    /**
     * Initializes names for each of the relevant swing items so that they can be found later.
     */
    private void initTestingSettings() {
        orderNameText.setName("orderNameText");
        orderAddressText.setName("orderAddressText");
        orderCityText.setName("orderCityText");
        orderZipCodeText.setName("orderZipCodeText");
        orderPoText.setName("orderPoText");
        orderDeptText.setName("orderDeptText");
        itemNoText.setName("itemNoText");
        itemDetailsText.setName("itemDetailsText");
        itemNotesText.setName("itemNotesText");
        itemBoxesText.setName("itemBoxesText");
        orderItemList.setName("orderItemList");
        addButton.setName("addButton");
        loadItemButton.setName("loadItemButton");
        clearItemButton.setName("clearItemButton");
        createButton.setName("createButton");
        removeButton.setName("removeButton");
        textSizeSpinner.setName("textSizeSpinner");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        orderNameText = new javax.swing.JTextField();
        orderCityText = new javax.swing.JTextField();
        orderZipCodeText = new javax.swing.JTextField();
        orderPoText = new javax.swing.JTextField();
        orderDeptText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderAddressText = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        itemDetailsText = new javax.swing.JTextField();
        itemNoText = new javax.swing.JTextField();
        itemNotesText = new javax.swing.JTextField();
        itemBoxesText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderItemList = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        removeButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        textSizeSpinner = new javax.swing.JSpinner();
        statusLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        loadItemButton = new javax.swing.JButton();
        clearItemButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shipping Label Creator");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Destination", 0, 0, new java.awt.Font("Aharoni", 0, 16))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("City:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Zip Code:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("P/O:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Dept:");

        orderNameText.setName(""); // NOI18N

        jScrollPane2.setViewportView(orderAddressText);
        orderAddressText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if(e.getKeyCode() == KeyEvent.VK_TAB) {
                    if (e.getModifiers() > 0)
                    orderAddressText.transferFocusBackward();
                    else
                    orderAddressText.transferFocus();
                    e.consume();
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(orderZipCodeText)
                    .addComponent(orderPoText)
                    .addComponent(orderDeptText)
                    .addComponent(jScrollPane2)
                    .addComponent(orderCityText, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orderNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(orderCityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(orderZipCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(orderPoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(orderDeptText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item", 0, 0, new java.awt.Font("Aharoni", 0, 16))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Item No:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Item Details:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Item Notes:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Item Boxes:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemNoText)
                    .addComponent(itemDetailsText)
                    .addComponent(itemNotesText)
                    .addComponent(itemBoxesText, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(itemNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(itemDetailsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(itemNotesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(itemBoxesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Items", 0, 0, new java.awt.Font("Aharoni", 0, 16))); // NOI18N

        orderItemList.setModel(listModel);
        jScrollPane1.setViewportView(orderItemList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        removeButton.setText("Remove");
        removeButton.setActionCommand("removeButton");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Text Size: ");

        textSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(20, 0, null, 1));

        statusLabel.setText("Status Label");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(removeButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(statusLabel))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(jLabel11)
                    .addComponent(textSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusLabel))
        );

        addButton.setText("Add Item");
        addButton.setActionCommand("addItemButton");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        createButton.setText("Create PDF");
        createButton.setActionCommand("createPdfButton");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        loadItemButton.setText("Load Item");
        loadItemButton.setActionCommand("loadItemButton");
        loadItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadItemButtonActionPerformed(evt);
            }
        });

        clearItemButton.setText("Clear Item");
        clearItemButton.setActionCommand("clearItemButton");
        clearItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearItemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearItemButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(addButton)
                                .addComponent(loadItemButton)
                                .addComponent(clearItemButton))
                            .addComponent(createButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Destination");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearItemTextBoxes() {
        itemNoText.setText("");
        itemDetailsText.setText("");
        itemNotesText.setText("");
        itemBoxesText.setText("");
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        final int itemBoxes = parseBoxInt(itemBoxesText.getText());
        // Check if the number of boxes is invalid
        if (itemBoxes <= 0)
            return;

        final String itemNo = itemNoText.getText();
        final String itemDetails = itemDetailsText.getText();
        final String itemNotes = itemNotesText.getText();
        Item item = new Item(itemNo, itemDetails, itemNotes, itemBoxes);
        items = Stream.concat(items.stream(), Stream.of(item)).collect(Collectors.toList());
        clearItemTextBoxes();

        listModel.addElement(item);
        statusLabel.setText("Item Added!");
    }//GEN-LAST:event_addButtonActionPerformed

    private void loadItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadItemButtonActionPerformed
        final int selectedIndex = orderItemList.getSelectedIndex();
        Item item = items.get(selectedIndex);
        itemNoText.setText(item.itemNo);
        itemDetailsText.setText(item.details);
        itemNotesText.setText(item.notes);
        itemBoxesText.setText(Integer.toString(item.boxes));
    }//GEN-LAST:event_loadItemButtonActionPerformed

    private void clearItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearItemButtonActionPerformed
        clearItemTextBoxes();
    }//GEN-LAST:event_clearItemButtonActionPerformed

    /**
     * Parses an integer from a text string.
     *
     * @param text
     *     The text to return into an integer
     * @return The number of boxes the item needs. If there is an error it will return -1 (an
     * invalid number of boxes).
     */
    private int parseBoxInt(final String text) {
        final String noWhiteSpace = text.replaceAll(" * ", "");
        try {
            return Integer.parseInt(noWhiteSpace);
        } catch(NumberFormatException e) {
            System.err.println("Box number is invalid: " + e);
            statusLabel.setText("Adding item has encountered an error. Cannot parse non-integer.");
        }
        return -1;
    }

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        if (createButton.isEnabled()) {
            if (createFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                createLatex();
                File file = createFileChooser.getSelectedFile();
                convertLatexToPdf(file);
            }
        }
    }//GEN-LAST:event_createButtonActionPerformed

    /**
     * Creates the latex file.
     */
    private void createLatex() {
        Order.Builder builder = new Order.Builder();
        builder.setName(orderNameText.getText());
        builder.setAddress(orderAddressText.getText());
        builder.setCity(orderCityText.getText());
        builder.setZipCode(orderZipCodeText.getText());
        builder.setPO(orderPoText.getText());
        builder.setDeptNo(orderDeptText.getText());
        builder.setItems(items.stream());

        final int latexFontSize;
        if ((Integer) textSizeSpinner.getValue() > 0)
            latexFontSize = (Integer) textSizeSpinner.getValue();
        else
            latexFontSize = 20;

        if (!Latex.generateLatex(settings, "testfile.tex", builder.build(), latexFontSize))
            statusLabel.setText("Generating .tex file has encountered a serious error.");
    }

    /**
     * Converts the latex file created (testfile.tex) to a pdf.
     * @param file
     *     The pdf file location specified.
     */
    private void convertLatexToPdf(File file) {
        // Call pdflatex
        createButton.setEnabled(false);
        Process pdflatex = Latex.runPdfLatex(settings, "testfile.tex");
        if (pdflatex != null) {
            try {
                // Wait and then remove the extra files
                pdflatex.waitFor();
                File pdfFile = new File("testfile.pdf");
                copyFile(pdfFile, file);
                statusLabel.setText("PDF Created!");

                final String filePath = file.getAbsolutePath();
                final int dotPos = filePath.lastIndexOf('.');
                File dirTexFile = new File("testfile.tex");
                File texFile = new File(filePath.substring(0, dotPos) + ".tex");
                copyFile(dirTexFile, texFile);

                // Try to remove extra files
                deleteFile("testfile.aux");
                deleteFile("testfile.log");
            } catch (IOException | InterruptedException e1) {
                System.err.println(e1);
            }
        } else {
            statusLabel.setText("Pdf creation failed");
            statusLabel.setText("Executing pdflatex failed. Is it in the path?");
        }
        createButton.setEnabled(true);
    }

    /**
     * Copy the file to the destination.
     *
     * @param source
     *     The source file.
     * @param dest
     *     The destination file.
     * @throws IOException When reading source file fails or when writing destination file fails.
     */
    private static void copyFile(File source, File dest) throws IOException {
        InputStream is = null;
        OutputStream os = null;
        try {
            is = new FileInputStream(source);
            os = new FileOutputStream(dest);
            byte[] buffer = new byte[2048];
            int length = is.read(buffer);
            while (length > 0) {
                os.write(buffer, 0, length);
                length = is.read(buffer);
            }
        } finally {
            try {
                if (is != null)
                    is.close();
            } catch (IOException e) {
                System.err.println("Error closing input stream: " + e);
            }

            try {
                if (os != null)
                    os.close();
            } catch (IOException e) {
                System.err.println("Error closing output stream: " + e);
            }
        }
    }

    /**
     * Deletes the file name inputted. This is to eliminate .aux and .log files.
     *
     * @param fileName
     *     The fileName to delete.
     */
    private boolean deleteFile(String fileName) {
        File file = new File(fileName);
        return file.delete();
    }

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        IntStream selected = IntStream.of(orderItemList.getSelectedIndices());
        PrimitiveIterator.OfInt totalRemoved = IntStream.range(
            0,
            orderItemList.getSelectedIndices().length
        ).iterator();
        List<Item> removedItemList = items.stream().collect(Collectors.toList());
        selected.forEachOrdered(i -> {
            int numRemoved = totalRemoved.nextInt();
            removedItemList.remove(i - numRemoved);
            listModel.remove(i - numRemoved);
            statusLabel.setText("Removed item");
        });
        items = removedItemList;
    }//GEN-LAST:event_removeButtonActionPerformed

    /**
     * Gets the lsit of items in the main window. This is to be used by the tester to verify the
     * number of items.
     *
     * @return A list of items.
     */
    public Stream<Item> getItems() {
        return items.stream();
    }

    /**
     * @param args The command line arguments.
     */
    public static void main(String args[]) {
        Thread.currentThread().setName("Shipping Label Creator");
        Settings settings = Settings.readINISettings(new File("Settings.ini"));

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        }
        catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainWindow(settings).setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearItemButton;
    private javax.swing.JButton createButton;
    private javax.swing.JFileChooser createFileChooser;
    private javax.swing.JTextField itemBoxesText;
    private javax.swing.JTextField itemDetailsText;
    private javax.swing.JTextField itemNoText;
    private javax.swing.JTextField itemNotesText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loadItemButton;
    private javax.swing.JTextPane orderAddressText;
    private javax.swing.JTextField orderCityText;
    private javax.swing.JTextField orderDeptText;
    private javax.swing.JList orderItemList;
    private javax.swing.JTextField orderNameText;
    private javax.swing.JTextField orderPoText;
    private javax.swing.JTextField orderZipCodeText;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JSpinner textSizeSpinner;
    // End of variables declaration//GEN-END:variables
}
